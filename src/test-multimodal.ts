// Teste b√°sico do sistema multi-modal
import { MultiModalHelpers } from './services/multimodal-helpers.service'

async function testMultiModal(): Promise<void> {
  console.log('üß™ Testando Sistema Multi-Modal...\n')

  const helpers = new MultiModalHelpers()
  let successCount = 0
  let totalTests = 0

  // Teste 1: An√°lise de emo√ß√£o
  totalTests++
  try {
    const emotion = await helpers.analyzeTextEmotion('Estou muito feliz com o atendimento!')
    console.log(`‚úÖ An√°lise de emo√ß√£o: ${emotion.tone} (${emotion.confidence.toFixed(2)})`)
    successCount++
  } catch (error) {
    console.log(`‚ùå An√°lise de emo√ß√£o falhou: ${error}`)
  }

  // Teste 2: Contexto de neg√≥cio
  totalTests++
  try {
    const context = await helpers.analyzeTextForBusiness('Quero agendar um corte de cabelo', 'beauty')
    console.log(`‚úÖ Contexto de neg√≥cio: ${context.suggestedActions.join(', ')}`)
    successCount++
  } catch (error) {
    console.log(`‚ùå Contexto de neg√≥cio falhou: ${error}`)
  }

  // Teste 3: Detec√ß√£o de idioma
  totalTests++
  try {
    const lang = helpers.detectLanguageFallback('Ol√°, como voc√™ est√°?')
    console.log(`‚úÖ Detec√ß√£o de idioma: ${lang}`)
    successCount++
  } catch (error) {
    console.log(`‚ùå Detec√ß√£o de idioma falhou: ${error}`)
  }

  // Teste 4: Extra√ß√£o de entidades
  totalTests++
  try {
    const entities = await helpers.extractEntitiesFromText('Quero agendar para amanh√£ √†s 14h')
    console.log(`‚úÖ Extra√ß√£o de entidades: ${entities.length} entidades encontradas`)
    successCount++
  } catch (error) {
    console.log(`‚ùå Extra√ß√£o de entidades falhou: ${error}`)
  }

  // Teste 5: Gera√ß√£o de cache key
  totalTests++
  try {
    const key = helpers.generateCacheKey({ type: 'text', content: 'teste', mimeType: 'text/plain' })
    console.log(`‚úÖ Cache key gerada: ${key.substring(0, 20)}...`)
    successCount++
  } catch (error) {
    console.log(`‚ùå Cache key falhou: ${error}`)
  }

  console.log(`\nüìä Resultado: ${successCount}/${totalTests} testes passaram`)
  console.log(`üéØ Taxa de sucesso: ${((successCount / totalTests) * 100).toFixed(1)}%`)

  if (successCount === totalTests) {
    console.log('üéâ Todos os testes passaram!')
  } else {
    console.log('‚ö†Ô∏è  Alguns testes falharam')
  }
}

// Executar teste
testMultiModal()
  .then(() => console.log('\n‚úÖ Teste conclu√≠do'))
  .catch(error => console.error('\n‚ùå Erro no teste:', error)) 