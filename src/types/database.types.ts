// Generated by Supabase AI CLI
// Universal Booking System Database Types

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export type Database = {
  public: {
    Tables: {
      appointments: {
        Row: {
          appointment_data: Json | null
          cancellation_reason: string | null
          cancelled_at: string | null
          cancelled_by: string | null
          created_at: string | null
          currency: string | null
          customer_notes: string | null
          end_time: string
          external_event_id: string | null
          final_price: number | null
          id: string
          internal_notes: string | null
          quoted_price: number | null
          service_id: string | null
          start_time: string
          status: Database["public"]["Enums"]["appointment_status"] | null
          tenant_id: string | null
          timezone: string | null
          updated_at: string | null
          user_id: string | null
        }
        Insert: {
          appointment_data?: Json | null
          cancellation_reason?: string | null
          cancelled_at?: string | null
          cancelled_by?: string | null
          created_at?: string | null
          currency?: string | null
          customer_notes?: string | null
          end_time: string
          external_event_id?: string | null
          final_price?: number | null
          id?: string
          internal_notes?: string | null
          quoted_price?: number | null
          service_id?: string | null
          start_time: string
          status?: Database["public"]["Enums"]["appointment_status"] | null
          tenant_id?: string | null
          timezone?: string | null
          updated_at?: string | null
          user_id?: string | null
        }
        Update: {
          appointment_data?: Json | null
          cancellation_reason?: string | null
          cancelled_at?: string | null
          cancelled_by?: string | null
          created_at?: string | null
          currency?: string | null
          customer_notes?: string | null
          end_time?: string
          external_event_id?: string | null
          final_price?: number | null
          id?: string
          internal_notes?: string | null
          quoted_price?: number | null
          service_id?: string | null
          start_time?: string
          status?: Database["public"]["Enums"]["appointment_status"] | null
          tenant_id?: string | null
          timezone?: string | null
          updated_at?: string | null
          user_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "appointments_service_id_fkey"
            columns: ["service_id"]
            isOneToOne: false
            referencedRelation: "services"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "appointments_tenant_id_fkey"
            columns: ["tenant_id"]
            isOneToOne: false
            referencedRelation: "tenants"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "appointments_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      availability_templates: {
        Row: {
          created_at: string | null
          friday_slots: Json | null
          id: string
          is_default: boolean | null
          monday_slots: Json | null
          name: string
          saturday_slots: Json | null
          special_dates: Json | null
          sunday_slots: Json | null
          tenant_id: string | null
          thursday_slots: Json | null
          tuesday_slots: Json | null
          updated_at: string | null
          wednesday_slots: Json | null
        }
        Insert: {
          created_at?: string | null
          friday_slots?: Json | null
          id?: string
          is_default?: boolean | null
          monday_slots?: Json | null
          name: string
          saturday_slots?: Json | null
          special_dates?: Json | null
          sunday_slots?: Json | null
          tenant_id?: string | null
          thursday_slots?: Json | null
          tuesday_slots?: Json | null
          updated_at?: string | null
          wednesday_slots?: Json | null
        }
        Update: {
          created_at?: string | null
          friday_slots?: Json | null
          id?: string
          is_default?: boolean | null
          monday_slots?: Json | null
          name?: string
          saturday_slots?: Json | null
          special_dates?: Json | null
          sunday_slots?: Json | null
          tenant_id?: string | null
          thursday_slots?: Json | null
          tuesday_slots?: Json | null
          updated_at?: string | null
          wednesday_slots?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "availability_templates_tenant_id_fkey"
            columns: ["tenant_id"]
            isOneToOne: false
            referencedRelation: "tenants"
            referencedColumns: ["id"]
          },
        ]
      }
      conversation_history: {
        Row: {
          confidence_score: number | null
          content: string
          conversation_context: Json | null
          created_at: string | null
          id: string
          intent_detected: string | null
          is_from_user: boolean
          message_type: string
          tenant_id: string | null
          user_id: string | null
        }
        Insert: {
          confidence_score?: number | null
          content: string
          conversation_context?: Json | null
          created_at?: string | null
          id?: string
          intent_detected?: string | null
          is_from_user: boolean
          message_type: string
          tenant_id?: string | null
          user_id?: string | null
        }
        Update: {
          confidence_score?: number | null
          content?: string
          conversation_context?: Json | null
          created_at?: string | null
          id?: string
          intent_detected?: string | null
          is_from_user?: boolean
          message_type?: string
          tenant_id?: string | null
          user_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "conversation_history_tenant_id_fkey"
            columns: ["tenant_id"]
            isOneToOne: false
            referencedRelation: "tenants"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "conversation_history_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      service_categories: {
        Row: {
          created_at: string | null
          description: string | null
          display_order: number | null
          id: string
          name: string
          tenant_id: string | null
        }
        Insert: {
          created_at?: string | null
          description?: string | null
          display_order?: number | null
          id?: string
          name: string
          tenant_id?: string | null
        }
        Update: {
          created_at?: string | null
          description?: string | null
          display_order?: number | null
          id?: string
          name?: string
          tenant_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "service_categories_tenant_id_fkey"
            columns: ["tenant_id"]
            isOneToOne: false
            referencedRelation: "tenants"
            referencedColumns: ["id"]
          },
        ]
      }
      services: {
        Row: {
          advance_booking_days: number | null
          base_price: number | null
          category_id: string | null
          created_at: string | null
          currency: string | null
          description: string | null
          display_order: number | null
          duration_max: number | null
          duration_min: number | null
          duration_minutes: number | null
          duration_type: Database["public"]["Enums"]["duration_type"]
          id: string
          is_active: boolean | null
          max_bookings_per_day: number | null
          name: string
          price_model: Database["public"]["Enums"]["price_model"]
          service_config: Json | null
          tenant_id: string | null
          updated_at: string | null
        }
        Insert: {
          advance_booking_days?: number | null
          base_price?: number | null
          category_id?: string | null
          created_at?: string | null
          currency?: string | null
          description?: string | null
          display_order?: number | null
          duration_max?: number | null
          duration_min?: number | null
          duration_minutes?: number | null
          duration_type?: Database["public"]["Enums"]["duration_type"]
          id?: string
          is_active?: boolean | null
          max_bookings_per_day?: number | null
          name: string
          price_model?: Database["public"]["Enums"]["price_model"]
          service_config?: Json | null
          tenant_id?: string | null
          updated_at?: string | null
        }
        Update: {
          advance_booking_days?: number | null
          base_price?: number | null
          category_id?: string | null
          created_at?: string | null
          currency?: string | null
          description?: string | null
          display_order?: number | null
          duration_max?: number | null
          duration_min?: number | null
          duration_minutes?: number | null
          duration_type?: Database["public"]["Enums"]["duration_type"]
          id?: string
          is_active?: boolean | null
          max_bookings_per_day?: number | null
          name?: string
          price_model?: Database["public"]["Enums"]["price_model"]
          service_config?: Json | null
          tenant_id?: string | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "services_category_id_fkey"
            columns: ["category_id"]
            isOneToOne: false
            referencedRelation: "service_categories"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "services_tenant_id_fkey"
            columns: ["tenant_id"]
            isOneToOne: false
            referencedRelation: "tenants"
            referencedColumns: ["id"]
          },
        ]
      }
      tenants: {
        Row: {
          ai_settings: Json
          business_address: Json | null
          business_description: string | null
          business_name: string
          business_rules: Json
          created_at: string | null
          domain: Database["public"]["Enums"]["business_domain"]
          domain_config: Json
          email: string
          id: string
          name: string
          phone: string
          slug: string
          status: string | null
          subscription_plan: string | null
          updated_at: string | null
          whatsapp_phone: string | null
        }
        Insert: {
          ai_settings?: Json
          business_address?: Json | null
          business_description?: string | null
          business_name: string
          business_rules?: Json
          created_at?: string | null
          domain: Database["public"]["Enums"]["business_domain"]
          domain_config?: Json
          email: string
          id?: string
          name: string
          phone: string
          slug: string
          status?: string | null
          subscription_plan?: string | null
          updated_at?: string | null
          whatsapp_phone?: string | null
        }
        Update: {
          ai_settings?: Json
          business_address?: Json | null
          business_description?: string | null
          business_name?: string
          business_rules?: Json
          created_at?: string | null
          domain?: Database["public"]["Enums"]["business_domain"]
          domain_config?: Json
          email?: string
          id?: string
          name?: string
          phone?: string
          slug?: string
          status?: string | null
          subscription_plan?: string | null
          updated_at?: string | null
          whatsapp_phone?: string | null
        }
        Relationships: []
      }
      user_tenants: {
        Row: {
          first_interaction: string | null
          last_interaction: string | null
          role: string | null
          tenant_id: string
          tenant_preferences: Json | null
          total_bookings: number | null
          user_id: string
        }
        Insert: {
          first_interaction?: string | null
          last_interaction?: string | null
          role?: string | null
          tenant_id: string
          tenant_preferences?: Json | null
          total_bookings?: number | null
          user_id: string
        }
        Update: {
          first_interaction?: string | null
          last_interaction?: string | null
          role?: string | null
          tenant_id?: string
          tenant_preferences?: Json | null
          total_bookings?: number | null
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "user_tenants_tenant_id_fkey"
            columns: ["tenant_id"]
            isOneToOne: false
            referencedRelation: "tenants"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "user_tenants_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      users: {
        Row: {
          created_at: string | null
          email: string | null
          id: string
          name: string | null
          phone: string
          preferences: Json | null
          updated_at: string | null
        }
        Insert: {
          created_at?: string | null
          email?: string | null
          id?: string
          name?: string | null
          phone: string
          preferences?: Json | null
          updated_at?: string | null
        }
        Update: {
          created_at?: string | null
          email?: string | null
          id?: string
          name?: string | null
          phone?: string
          preferences?: Json | null
          updated_at?: string | null
        }
        Relationships: []
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      citext: {
        Args: { "": boolean } | { "": string } | { "": unknown }
        Returns: string
      }
      citext_hash: {
        Args: { "": string }
        Returns: number
      }
      citextin: {
        Args: { "": unknown }
        Returns: string
      }
      citextout: {
        Args: { "": string }
        Returns: unknown
      }
      citextrecv: {
        Args: { "": unknown }
        Returns: string
      }
      citextsend: {
        Args: { "": string }
        Returns: string
      }
    }
    Enums: {
      appointment_status:
        | "pending"
        | "confirmed"
        | "in_progress"
        | "completed"
        | "cancelled"
        | "no_show"
        | "rescheduled"
      business_domain:
        | "legal"
        | "healthcare"
        | "education"
        | "beauty"
        | "sports"
        | "consulting"
        | "other"
      duration_type: "fixed" | "variable" | "estimated" | "session"
      price_model: "fixed" | "hourly" | "package" | "dynamic" | "consultation"
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

// Constants for validation and reference
export const Constants = {
  public: {
    Enums: {
      appointment_status: [
        "pending",
        "confirmed",
        "in_progress", 
        "completed",
        "cancelled",
        "no_show",
        "rescheduled",
      ],
      business_domain: [
        "legal",
        "healthcare",
        "education",
        "beauty",
        "sports",
        "consulting",
        "other",
      ],
      duration_type: ["fixed", "variable", "estimated", "session"],
      price_model: ["fixed", "hourly", "package", "dynamic", "consultation"],
    },
  },
} as const 

// Helper types for easier usage
export type Tables<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Row']
export type TablesInsert<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Insert']
export type TablesUpdate<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Update']
export type Enums<T extends keyof Database['public']['Enums']> = Database['public']['Enums'][T]

// Specific types for common usage
export type Tenant = Tables<'tenants'>
export type User = Tables<'users'>
export type Service = Tables<'services'>
export type Appointment = Tables<'appointments'>

export type BusinessDomain = Enums<'business_domain'>
export type AppointmentStatus = Enums<'appointment_status'>
export type DurationType = Enums<'duration_type'>
export type PriceModel = Enums<'price_model'>

// Domain-specific configurations
export interface DomainConfig {
  // Legal
  specialties?: string[]
  consultation_types?: string[]
  requires_documents?: boolean
  preparation_time_minutes?: number
  
  // Healthcare  
  session_types?: string[]
  modalities?: string[]
  requires_intake?: boolean
  
  // Education
  subjects?: string[]
  levels?: string[]
  class_types?: string[]
  locations?: string[]
  
  // Beauty
  services_categories?: string[]
  professionals_count?: number
  accepts_walk_ins?: boolean
  combo_services?: boolean
  
  // Sports
  sports?: string[]
  equipment_provided?: boolean
  weather_dependent?: boolean
}

export interface AISettings {
  greeting_message: string
  domain_keywords: string[]
  escalation_triggers?: string[]
  sensitive_topics?: string[]
  crisis_response?: string
  upsell_enabled?: boolean
  motivational_messages?: boolean
}

export interface BusinessRules {
  working_hours: {
    monday: string[]
    tuesday: string[]
    wednesday: string[]
    thursday: string[]
    friday: string[]
    saturday: string[]
    sunday: string[]
  }
  advance_booking_days?: number
  cancellation_policy?: string
  payment_methods?: string[]
  travel_time_minutes?: number
  package_discounts?: boolean
  peak_hours_surcharge?: number
  loyalty_program?: boolean
  weather_cancellation?: boolean
  court_booking_required?: boolean
} 